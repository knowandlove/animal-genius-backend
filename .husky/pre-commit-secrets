#!/bin/sh
# Pre-commit hook to detect potential secrets

# Colors for output
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "üîç Checking for potential secrets..."

# Patterns to detect
PATTERNS=(
  # JWT patterns
  "JWT_SECRET=.+"
  "jwt_secret=.+"
  # Database URLs with passwords
  "postgresql://[^:]+:[^@]+@"
  "mysql://[^:]+:[^@]+@"
  # API keys
  "SUPABASE_.*KEY=.+"
  "API_KEY=.+"
  "SECRET_KEY=.+"
  # Generic password patterns
  "password=.+"
  "PASSWORD=.+"
  # Bearer tokens
  "Bearer [A-Za-z0-9+/=]+"
  # Base64 encoded potential secrets
  "eyJ[A-Za-z0-9+/=]+"
)

# Files to check (excluding .env.example and similar)
FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -v ".env.example" | grep -v ".env.template" | grep -v ".env.development.template")

FOUND_SECRETS=0

for file in $FILES; do
  if [ -f "$file" ]; then
    for pattern in "${PATTERNS[@]}"; do
      if grep -qE "$pattern" "$file"; then
        echo "${RED}‚ùå Potential secret found in $file${NC}"
        echo "${YELLOW}   Pattern: $pattern${NC}"
        FOUND_SECRETS=1
      fi
    done
  fi
done

if [ $FOUND_SECRETS -eq 1 ]; then
  echo "${RED}‚ùå Commit blocked: potential secrets detected!${NC}"
  echo "Please remove secrets and use environment variables instead."
  echo "If this is a false positive, you can bypass with: git commit --no-verify"
  exit 1
fi

echo "‚úÖ No secrets detected"